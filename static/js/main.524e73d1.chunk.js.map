{"version":3,"sources":["components/calculator/CalculatorKeybord.js","components/calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["CalculatorKeybord","props","Link","onClick","KeyBoardFunction","KeyBoardText","underline","Style","Avatar","variant","className","KeyBoardClass","useStyles","makeStyles","theme","root","display","margin","spacing","orange","color","backgroundColor","orange50","palette","getContrastText","grey","greyT","borderColor","greyD","greyLarge","width","textAlign","brownT","brown","brownD","brownLarge","blueT","lightBlue","blueD","blueLarge","greenT","teal","greenD","greenLarge","purpleT","purple","purpleD","purpleLarge","pinkT","pink","pinkD","pinkLarge","Calculator","classes","useState","result","setResult","memoryOperator","setMemoryOperator","currentOperator","setCurrentOperator","memoryEntryValue","setMemoryEntryValue","currentEntryValue","setCurrentEntryValue","entryAuthorized","setEntryAuthorized","mathFinalized","setMathFinalized","displayNumber1","setDisplayNumber1","displayNumber2","setDisplayNumber2","displayOperator","setDisplayOperator","calculatorTableColor","setCalculatorTableColor","calculatorTableColorNumbers","setCalculatorTableColorNumbers","calculatorTableColor0","setCalculatorTableColor0","calculatorTableColorOpSide","setCalculatorTableColorOpSide","calculatorTableColorOpSidePressed","setCalculatorTableColorOpSidePressed","calculatorTableColorOpTop","setCalculatorTableColorOpTop","colorID","arrayColors","calculatorMachine","num1","num2","op","machineResult","parseFloat","handleOperator","operator","handleNumbers","val","length","formatDisplay","qtt","toString","slice","Container","fluid","Row","xs","Col","md","Table","colSpan","AvatarGroup","max","map","key","colorId","temNewValue","number1","number2","operatorLocal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.524e73d1.chunk.js","sourcesContent":["import React from 'react'\r\n/* Packages */\r\nimport Link from '@material-ui/core/Link';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n/* Projects Page */\r\n/* Responsibility: ==========================================*/\r\n/* Responsible for render each Calculator's buttons/keyboard */\r\n/* ==========================================================*/\r\nconst CalculatorKeybord = (props) => {\r\n    return (\r\n        <Link onClick={() => props.KeyBoardFunction(`${props.KeyBoardText}`)} underline=\"none\" Style=\"cursor:pointer;\">\r\n            <Avatar variant=\"rounded\" className={props.KeyBoardClass}>{props.KeyBoardText}</Avatar>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default CalculatorKeybord\r\n","import {React, useState}  from 'react'\r\n\r\n/* Packages */\r\nimport { Container, Row, Col, Table} from \"react-bootstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { orange, grey, brown, purple, teal, lightBlue, pink } from '@material-ui/core/colors';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n/* CSS */\r\nimport '../../style/Calculator.css';\r\n\r\n\r\n/* Components */\r\nimport CalculatorKeybord from \"./CalculatorKeybord\";\r\n\r\n/* Material Ui */\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },      \r\n    },   \r\n    orange: {\r\n      color: orange[50],\r\n      backgroundColor: orange[500],\r\n      margin: \"auto\",\r\n    },\r\n    orange50: {\r\n        color: theme.palette.getContrastText(orange[50]),\r\n        backgroundColor: orange[50],\r\n        margin: \"auto\",\r\n    },\r\n    grey: {\r\n      color: theme.palette.getContrastText(grey[200]),\r\n      backgroundColor: grey[200],\r\n      margin: \"auto\",\r\n    },\r\n    greyT: {\r\n        color: theme.palette.getContrastText(grey[900]),\r\n        backgroundColor: \"#212529\",\r\n        margin: \"auto\",\r\n        borderColor:\"#373b3e\",\r\n    },\r\n    greyD: {\r\n        color: theme.palette.getContrastText(grey[900]),\r\n        backgroundColor: grey[900],\r\n        margin: \"auto\",\r\n    },\r\n    greyLarge: {\r\n        color: theme.palette.getContrastText(grey[900]),\r\n        backgroundColor: grey[900],\r\n        width: \"100%\",\r\n        margin: \"auto\",\r\n        textAlign:\"left\",\r\n    },\r\n\r\n    brownT:{\r\n        color: theme.palette.getContrastText(brown[800]),\r\n        backgroundColor: brown[800],\r\n        margin: \"auto\",\r\n        borderColor: brown[700],\r\n    },\r\n    brownD:{\r\n        color: theme.palette.getContrastText(brown[800]),\r\n        backgroundColor: brown[900],\r\n        margin: \"auto\",\r\n    },\r\n    brownLarge:{\r\n        color: theme.palette.getContrastText(brown[900]),\r\n        backgroundColor: brown[900],\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        textAlign:\"left\",\r\n    },\r\n    blueT:{\r\n        color: theme.palette.getContrastText(lightBlue[800]),\r\n        backgroundColor: lightBlue[800],\r\n        margin: \"auto\",\r\n        borderColor:lightBlue[700],\r\n    },\r\n    blueD:{\r\n        color: theme.palette.getContrastText(lightBlue[900]),\r\n        backgroundColor: lightBlue[900],\r\n        margin: \"auto\",\r\n    },\r\n    blueLarge:{\r\n        color: theme.palette.getContrastText(lightBlue[900]),\r\n        backgroundColor: lightBlue[900],\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        textAlign:\"left\",\r\n    },\r\n    greenT:{\r\n        color: theme.palette.getContrastText(teal[800]),\r\n        backgroundColor: teal[800],\r\n        margin: \"auto\",\r\n        borderColor: teal[700],\r\n    },\r\n    greenD:{\r\n        color: theme.palette.getContrastText(teal[900]),\r\n        backgroundColor: teal[900],\r\n        margin: \"auto\",\r\n    },\r\n    greenLarge:{\r\n        color: theme.palette.getContrastText(teal[900]),\r\n        backgroundColor: teal[900],\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        textAlign:\"left\",\r\n    },\r\n    purpleT:{\r\n        color: theme.palette.getContrastText(purple[800]),\r\n        backgroundColor: purple[800],\r\n        margin: \"auto\",\r\n        borderColor:purple[700],\r\n    },\r\n    purpleD:{\r\n        color: theme.palette.getContrastText(purple[900]),\r\n        backgroundColor: purple[900],\r\n        margin: \"auto\",\r\n        borderColor:purple[700],\r\n    },\r\n    purpleLarge:{\r\n        color: theme.palette.getContrastText(purple[900]),\r\n        backgroundColor: purple[900],\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        textAlign:\"left\",\r\n    },\r\n    pinkT:{\r\n        color: theme.palette.getContrastText(pink[800]),\r\n        backgroundColor: pink[800],\r\n        margin: \"auto\",\r\n        borderColor:pink[700],\r\n    },\r\n    pinkD:{\r\n        color: theme.palette.getContrastText(pink[900]),\r\n        backgroundColor: pink[900],\r\n        margin: \"auto\",\r\n        borderColor:pink[700],\r\n    },\r\n    pinkLarge:{\r\n        color: theme.palette.getContrastText(pink[900]),\r\n        backgroundColor: pink[900],\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        textAlign:\"left\",\r\n    },\r\n  }));\r\n\r\n/* Projects Page */\r\n/* Responsibility: =====================================================*/\r\n/* The main Function where call component to render + all Math related  */\r\n/* =====================================================================*/\r\nconst Calculator = () => {\r\n    const classes = useStyles();\r\n\r\n    const [result, setResult] = useState(\"\");\r\n    const [memoryOperator, setMemoryOperator] = useState(\"\");\r\n    const [currentOperator, setCurrentOperator] = useState(\"\");\r\n    const [memoryEntryValue, setMemoryEntryValue] = useState(\"\");\r\n    const [currentEntryValue, setCurrentEntryValue] = useState(\"\");\r\n    const [entryAuthorized, setEntryAuthorized] = useState(true);\r\n    const [mathFinalized, setMathFinalized] = useState(false);\r\n\r\n    const [displayNumber1, setDisplayNumber1] = useState(\"\");\r\n    const [displayNumber2, setDisplayNumber2] = useState(\"\");\r\n    const [displayOperator, setDisplayOperator] = useState(\"\");\r\n\r\n    const [calculatorTableColor, setCalculatorTableColor] = useState(classes.greyT);\r\n    const [calculatorTableColorNumbers, setCalculatorTableColorNumbers] = useState(classes.greyD);\r\n    const [calculatorTableColor0, setCalculatorTableColor0] = useState(classes.greyLarge);\r\n    const [calculatorTableColorOpSide, setCalculatorTableColorOpSide] = useState(classes.orange);\r\n    const [calculatorTableColorOpSidePressed, setCalculatorTableColorOpSidePressed] = useState(classes.orange50);\r\n    const [calculatorTableColorOpTop, setCalculatorTableColorOpTop] = useState(classes.grey);\r\n    const [arrayColors, setArrayColors] = useState([\r\n        { colorID: \"0\", calculatorTableColor: classes.greyT, calculatorTableColorNumbers: classes.greyD, calculatorTableColor0: classes.greyLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n        { colorID: \"1\", calculatorTableColor: classes.pinkT, calculatorTableColorNumbers: classes.pinkD, calculatorTableColor0: classes.pinkLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n        { colorID: \"2\", calculatorTableColor: classes.blueT, calculatorTableColorNumbers: classes.blueD, calculatorTableColor0: classes.blueLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n        { colorID: \"3\", calculatorTableColor: classes.brownT, calculatorTableColorNumbers: classes.brownD, calculatorTableColor0: classes.brownLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n        { colorID: \"4\", calculatorTableColor: classes.greenT, calculatorTableColorNumbers: classes.greenD, calculatorTableColor0: classes.greenLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n        { colorID: \"5\", calculatorTableColor: classes.purpleT, calculatorTableColorNumbers: classes.purpleD, calculatorTableColor0: classes.purpleLarge, calculatorTableColorOpSide: classes.orange, calculatorTableColorOpSidePressed: classes.orange50, calculatorTableColorOpTop: classes.grey },\r\n    ]);\r\n\r\n    //function called when \"| A/C |\" is clicked\r\n    const allClean = () => {\r\n        setMemoryEntryValue(\"\");\r\n        setCurrentOperator(\"\");\r\n        setMemoryOperator(\"\");   \r\n        setDisplayNumber1(\"\");\r\n        setDisplayNumber2(\"\");\r\n        setDisplayOperator(\"\");\r\n        //set result and the update the currentEntryValue\r\n        setResult(\"\");\r\n        setCurrentEntryValue(\"\"); \r\n    }\r\n\r\n    //function called when \"| % |\" is clicked\r\n    const mathPercentage = () => {\r\n        //prepare the number1 and number2 to send to calculatorMachine\r\n        let temNewValue = calculatorMachine(parseFloat(currentEntryValue), parseFloat(100), \"/\"); \r\n        setMemoryEntryValue(\"\");\r\n        setMemoryOperator(\"\"); \r\n        setEntryAuthorized(false);\r\n        setMathFinalized(true);\r\n        setResult(temNewValue);\r\n        setCurrentEntryValue(temNewValue);  \r\n    }\r\n\r\n    //function called when \"| +/- |\" is clicked\r\n    const mathInvert = () => {\r\n        //prepare the number1 and number2 to send to calculatorMachine\r\n        let temNewValue = calculatorMachine(parseFloat(currentEntryValue), parseFloat(-1), \"x\"); \r\n        setMemoryEntryValue(\"\");\r\n        setMemoryOperator(\"\"); \r\n        setEntryAuthorized(false);\r\n        setMathFinalized(true);\r\n        setResult(temNewValue);\r\n        setCurrentEntryValue(temNewValue); \r\n    }\r\n\r\n    // function called when \"| = |\" is clicked\r\n    // determine the 2 values that will be sent to calculatorMachine to get the result.\r\n    // also clean and update some states \r\n    const calcLastPress = (operator) => {\r\n        let temNewValue = \"\"\r\n        let number1 = \"\"\r\n        let number2 = \"\"\r\n        let operatorLocal = \"\"\r\n        //prepare the number1 and number2 to send to calculatorMachine\r\n        //first: check if an calc has been started\r\n        if(memoryOperator !== \"\") {\r\n            operatorLocal = memoryOperator;\r\n            // verify the circumstances of the click for example if \"=\" is clicked over and over, \r\n            // this block identifies the last operator and the last entry data to keep doing the operation.\r\n            if(parseFloat(currentEntryValue) === parseFloat(result)){\r\n                number1 = parseFloat(result);\r\n                if(memoryEntryValue !== \"\"){\r\n                    number2 = parseFloat(memoryEntryValue);\r\n                }else{\r\n                    number2 = parseFloat(currentEntryValue);\r\n                }\r\n            }else {\r\n                if(result === \"\"){\r\n                    number1 = parseFloat(memoryEntryValue);\r\n                }else{\r\n                    number1 = parseFloat(result);\r\n                }\r\n                number2 = parseFloat(currentEntryValue);\r\n            }\r\n            temNewValue = calculatorMachine(number1, number2, operatorLocal); \r\n            if(parseFloat(currentEntryValue) !== parseFloat(result)){ \r\n                setMemoryEntryValue(currentEntryValue);   \r\n            } \r\n        }\r\n        setEntryAuthorized(false);\r\n        setMathFinalized(true);\r\n        //set result and the update the currentEntryValue\r\n        setResult(temNewValue);\r\n        setCurrentEntryValue(temNewValue);        \r\n    }\r\n\r\n    // responsible to receive 3 parameters and make a simple calc\r\n    // also this function set the display math\r\n    const calculatorMachine = (num1,num2,op)  => {\r\n        setDisplayNumber1(num1);\r\n        setDisplayNumber2(num2);\r\n        setDisplayOperator(op);\r\n        let machineResult = \"\"        \r\n        switch(op) {\r\n            case '+':\r\n                machineResult = parseFloat(num1) + parseFloat(num2);\r\n                break;\r\n            case '-':\r\n                machineResult = parseFloat(num1) - parseFloat(num2);\r\n                break;\r\n            case '/':\r\n                machineResult = parseFloat(num1) / parseFloat(num2);\r\n                break;\r\n            case 'x':\r\n                machineResult = parseFloat(num1) * parseFloat(num2);\r\n                break;\r\n                \r\n            default:\r\n        }  \r\n        return parseFloat(machineResult);        \r\n    }\r\n\r\n    // Function called when \"| / | * | - | + |\" are clicked\r\n    // Responsible to set/update the current and memory operator/entry value\r\n    const handleOperator = (operator) => {\r\n        setCurrentOperator(operator);\r\n        setMemoryOperator(operator);\r\n        if(parseFloat(currentEntryValue) === parseFloat(result)){ \r\n            setMemoryEntryValue(\"\");\r\n        }else{\r\n            setMemoryEntryValue(currentEntryValue);\r\n        }\r\n        setEntryAuthorized(false);\r\n        setMathFinalized(false);\r\n    }\r\n\r\n    // Function called when clicked on the \"numbers\" and \".\" of the calculator\r\n    // Responsible to check if it is a new interaction or it is part of a current already started operation\r\n    const handleNumbers = (val) => {     \r\n        if(entryAuthorized === true){\r\n            if(currentEntryValue.length <= 8 ){\r\n                setCurrentEntryValue(currentEntryValue + val);         \r\n            }            \r\n        }else{\r\n            setCurrentEntryValue(val);\r\n            setEntryAuthorized(true);\r\n            setMemoryOperator(currentOperator);       \r\n            setCurrentOperator(\"\");\r\n            setDisplayNumber1(\"\");\r\n            setDisplayNumber2(\"\");\r\n            setDisplayOperator(\"\");\r\n            if(mathFinalized){\r\n                setResult(\"\");\r\n                setMathFinalized(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // function to limit the display to show only 9 digits\r\n    const formatDisplay = (val,qtt) => {\r\n        let displayFormated = \"\"\r\n        displayFormated = val.toString().slice(0,qtt);\r\n        return displayFormated;\r\n    }\r\n    \r\n    const calculatorColor = (colorId) => {\r\n        setCalculatorTableColor(arrayColors[colorId].calculatorTableColor);    \r\n        setCalculatorTableColorNumbers(arrayColors[colorId].calculatorTableColorNumbers);\r\n        setCalculatorTableColor0(arrayColors[colorId].calculatorTableColor0);\r\n        setCalculatorTableColorOpSide(arrayColors[colorId].calculatorTableColorOpSide);\r\n        setCalculatorTableColorOpSidePressed(arrayColors[colorId].calculatorTableColorOpSidePressed);\r\n        setCalculatorTableColorOpTop(arrayColors[colorId].calculatorTableColorOpTop);\r\n    }\r\n    return (\r\n        <Container className=\"Container_Calculator\" fluid>\r\n            <Row xs={12} className=\"justify-content-center\">\r\n                <Col xs={12} md={2}>\r\n                    <Table className={calculatorTableColor}>\r\n                        <tbody>\r\n                            <tr className=\"ColorRow\">\r\n                                <td colSpan=\"4\">\r\n                                    <AvatarGroup max={6} spacing=\"0\" className=\"AvatarGroup\">\r\n                                    {\r\n                                    arrayColors.map((val, key) => {\r\n                                        return(\r\n                                            <Link onClick={() => calculatorColor(val.colorID)} underline=\"none\" Style=\"cursor:pointer;\">\r\n                                                <Avatar className={val.calculatorTableColor}>{` `}</Avatar>\r\n                                            </Link> \r\n                                        );\r\n                                    })\r\n                                    }\r\n                                    </AvatarGroup>\r\n                                </td>   \r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"4\"><div className=\"resultMathDisplay\">{`${formatDisplay(displayNumber1,15)} ${displayOperator} ${formatDisplay(displayNumber2,15)}`}<br /></div><div className=\"resultDisplay\">{currentEntryValue ? formatDisplay(currentEntryValue,10) : \"0\"  }</div></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><CalculatorKeybord KeyBoardFunction={allClean} KeyBoardClass={calculatorTableColorOpTop} KeyBoardText=\"AC\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={mathInvert} KeyBoardClass={calculatorTableColorOpTop} KeyBoardText=\"+/-\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={mathPercentage} KeyBoardClass={calculatorTableColorOpTop} KeyBoardText=\"%\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleOperator} KeyBoardClass={currentOperator === \"/\" ?  calculatorTableColorOpSidePressed : calculatorTableColorOpSide} KeyBoardText=\"/\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"7\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"8\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"9\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleOperator} KeyBoardClass={currentOperator === \"x\" ?  calculatorTableColorOpSidePressed : calculatorTableColorOpSide} KeyBoardText=\"x\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"4\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"5\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"6\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleOperator} KeyBoardClass={currentOperator === \"-\" ?  calculatorTableColorOpSidePressed : calculatorTableColorOpSide} KeyBoardText=\"-\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"1\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"2\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\"3\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleOperator} KeyBoardClass={currentOperator === \"+\" ?  calculatorTableColorOpSidePressed : calculatorTableColorOpSide} KeyBoardText=\"+\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"2\"><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColor0} KeyBoardText=\"0\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={handleNumbers} KeyBoardClass={calculatorTableColorNumbers} KeyBoardText=\".\" /></td>\r\n                                <td><CalculatorKeybord KeyBoardFunction={calcLastPress} KeyBoardClass={calculatorTableColorOpSide} KeyBoardText=\"=\" /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>        \r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Calculator from \"./components/calculator/Calculator\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}